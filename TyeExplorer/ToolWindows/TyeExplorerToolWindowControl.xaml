<UserControl x:Class="TyeExplorer.ToolWindows.TyeExplorerToolWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}"
             Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTextKey}}"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             Name="TyeExplorer">
    <UserControl.Resources>
        <ContextMenu x:Key="ContextMenuReplica">
            <MenuItem Header="Attach debugger to process" Click="OnClickAttachDebuggerToProcess" />
        </ContextMenu>
    </UserControl.Resources>
    <Grid>
        <TreeView Name="TreeView" 
                  HorizontalAlignment="Stretch" 
                  VerticalAlignment="Stretch"
                  Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}" 
                  Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTextKey}}"
                  BorderBrush="Transparent">

            <TreeView.Resources>
                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                    <Setter Property="HorizontalContentAlignment"
                            Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TreeViewItem">
                                <StackPanel>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"
                                                              MinWidth="19" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <ToggleButton
                                            IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                            ClickMode="Press"
                                            Name="Expander">
                                            <ToggleButton.Style>
                                                <Style TargetType="ToggleButton">
                                                    <Setter Property="UIElement.Focusable"
                                                            Value="false" />
                                                    <Setter Property="FrameworkElement.Width"
                                                            Value="16" />
                                                    <Setter Property="FrameworkElement.Height"
                                                            Value="16" />
                                                    <Setter Property="Control.Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="ToggleButton">
                                                                <Border Padding="5,5,5,5"
                                                                        Background="#00FFFFFF"
                                                                        Width="16"
                                                                        Height="16">
                                                                    <Path Fill="#00FFFFFF"
                                                                          Stroke="#FF989898"
                                                                          Name="ExpandPath">
                                                                        <Path.Data>
                                                                            <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                        </Path.Data>
                                                                        <Path.RenderTransform>
                                                                            <RotateTransform Angle="135"
                                                                                CenterX="3"
                                                                                CenterY="3" />
                                                                        </Path.RenderTransform>
                                                                    </Path>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="UIElement.IsMouseOver"
                                                                             Value="True">
                                                                        <Setter TargetName="ExpandPath"
                                                                            Property="Shape.Stroke"
                                                                            Value="#FF1BBBFA" />
                                                                        <Setter TargetName="ExpandPath"
                                                                            Property="Shape.Fill"
                                                                            Value="#00FFFFFF" />
                                                                    </Trigger>
                                                                    <Trigger Property="ToggleButton.IsChecked"
                                                                             Value="True">
                                                                        <Setter TargetName="ExpandPath"
                                                                            Property="UIElement.RenderTransform">
                                                                            <Setter.Value>
                                                                                <RotateTransform Angle="180"
                                                                                    CenterX="3"
                                                                                    CenterY="3" />
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Setter TargetName="ExpandPath"
                                                                            Property="Shape.Fill"
                                                                            Value="#FF595959" />
                                                                        <Setter TargetName="ExpandPath"
                                                                            Property="Shape.Stroke"
                                                                            Value="#FF262626" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <Border x:Name="Bd"
                                                HorizontalAlignment="Stretch"
                                                BorderThickness="{TemplateBinding Border.BorderThickness}"
                                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                                Padding="{TemplateBinding Control.Padding}"
                                                Background="{TemplateBinding Panel.Background}"
                                                SnapsToDevicePixels="True"
                                                Grid.Column="1">
                                            <ContentPresenter x:Name="PART_Header"
                                                              Content="{TemplateBinding HeaderedContentControl.Header}"
                                                              ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                              ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                                              ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                                              ContentSource="Header"
                                                              HorizontalAlignment="Left"
                                                              Margin="4,1"
                                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                        </Border>
                                        <ItemsPresenter x:Name="ItemsHost"
                                                        Grid.Column="1"
                                                        Grid.Row="1" />
                                    </Grid>
                                </StackPanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="TreeViewItem.IsExpanded"
                                             Value="False">
                                        <Setter TargetName="ItemsHost"
                                                Property="UIElement.Visibility"
                                                Value="Collapsed" />
                                    </Trigger>
                                    <Trigger Property="ItemsControl.HasItems"
                                             Value="False">
                                        <Setter TargetName="Expander"
                                                Property="UIElement.Visibility"
                                                Value="Hidden" />
                                    </Trigger>
                                    <Trigger Property="TreeViewItem.IsSelected"
                                             Value="True">
                                        <Setter TargetName="Bd"
                                                Property="Panel.Background"
                                                Value="{DynamicResource {x:Static vsshell:VsBrushes.HighlightKey}}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="TreeViewItem.IsSelected"
                                                       Value="True" />
                                            <Condition Property="Selector.IsSelectionActive"
                                                       Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="Bd"
                                                Property="Panel.Background"
                                                Value="{DynamicResource {x:Static vsshell:VsBrushes.HighlightKey}}" />
                                    </MultiTrigger>
                                    <Trigger Property="UIElement.IsEnabled"
                                             Value="False">
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                    <TextBlock x:Name="Txt" Text="{Binding}" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTextKey}}" />
                                </StackPanel>
                                <DataTemplate.Triggers>
                                    <Trigger Property="TreeViewItem.IsSelected"
                                             Value="True">
                                        <Setter TargetName="Txt" Property="TextElement.Foreground"
                                                Value="{DynamicResource {x:Static vsshell:VsBrushes.HighlightTextKey}}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="TreeViewItem.IsSelected"
                                                       Value="True" />
                                            <Condition Property="Selector.IsSelectionActive"
                                                       Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="Txt" Property="TextElement.Foreground"
                                                Value="{DynamicResource {x:Static vsshell:VsBrushes.HighlightTextKey}}" />
                                    </MultiTrigger>
                                    <Trigger Property="UIElement.IsEnabled"
                                             Value="False">
                                        <Setter TargetName="Txt" Property="TextElement.Foreground"
                                                Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTextKey}}" />
                                    </Trigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                    
                        </Setter.Value>
                    </Setter>
                </Style>
            </TreeView.Resources>
        </TreeView>
    </Grid>
</UserControl>